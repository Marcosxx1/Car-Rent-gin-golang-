{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/cars/create": {
            "post": {
                "description": "Create a new car with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Create a new car",
                "operationId": "post-car",
                "parameters": [
                    {
                        "description": "Car information to be created",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cardtos.CarInputDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created car",
                        "schema": {
                            "$ref": "#/definitions/cardtos.CarOutputDTO"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/validation_errors.HTTPErrorCar"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cars/delete/{id}": {
            "delete": {
                "description": "Delete a car with the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Delete a car",
                "operationId": "delete-car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Car ID to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car deleted successfully"
                    },
                    "400": {
                        "description": "Error details",
                        "schema": {
                            "$ref": "#/definitions/validation_errors.HTTPErrorCar"
                        }
                    }
                }
            }
        },
        "/api/v1/cars/update/{id}": {
            "put": {
                "description": "Update a car with the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Update a car",
                "operationId": "put-car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Car information to be updated",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cardtos.CarInputDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully updated car",
                        "schema": {
                            "$ref": "#/definitions/cardtos.CarOutputDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation_errors.HTTPErrorCar"
                        }
                    }
                }
            }
        },
        "/api/v1/cars/{id}": {
            "get": {
                "description": "Find a car with the provided id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Find car",
                "operationId": "get-car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "car",
                        "schema": {
                            "$ref": "#/definitions/cardtos.CarOutputDTO"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/validation_errors.HTTPError"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/category/create": {
            "post": {
                "description": "Create a new category with the provided information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create a new category",
                "operationId": "post-category",
                "parameters": [
                    {
                        "description": "Category information to be created",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/categorydtos.CategoryInputDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created category",
                        "schema": {
                            "$ref": "#/definitions/categorydtos.CategoryOutputDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/category/list": {
            "get": {
                "description": "Retrieve a list of all categories.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Retrieve a list of categories",
                "operationId": "list-categories",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit the number of categories to be retrieved",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination of categories",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/categorydtos.CategoryOutputDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation_errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/maintenance/by/{maintenance_status}": {
            "get": {
                "description": "Get a list of maintenances by its status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Maintenance"
                ],
                "summary": "Get maintenances by its status",
                "operationId": "get-maintenances-by-status",
                "parameters": [
                    {
                        "enum": [
                            "Scheduled",
                            "InProgress",
                            "Completed",
                            "PendingApproval",
                            "Canceled",
                            "AwaitingParts",
                            "AwaitingPayment",
                            "Rescheduled",
                            "MaintenanceFailed",
                            "AwaitingInspection"
                        ],
                        "type": "string",
                        "description": "maintenance_status",
                        "name": "maintenance_status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved maintenances",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/maintenancedtos.MaintenanceOutputDTO"
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/validation_errors.HTTPError"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/maintenance/latest/{carID}": {
            "get": {
                "description": "Get latest maintenance associated with a specific carID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Maintenance"
                ],
                "summary": "Get latest maintenance by carID",
                "operationId": "get-latest-maintenances-by-carID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CarID",
                        "name": "carID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved maintenances",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/maintenancedtos.MaintenanceOutputDTO"
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/validation_errors.HTTPError"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/maintenance/maintenance/by-date-range": {
            "get": {
                "description": "Get maintenance records within the specified date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Maintenance"
                ],
                "summary": "Get maintenance records by date range",
                "operationId": "get-maintenances-by-date-range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date of the range (format: '2006-01-02')",
                        "name": "startDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date of the range (format: '2006-01-02')",
                        "name": "endDate",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved maintenance records",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/maintenancedtos.MaintenanceOutputDTO"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/validation_errors.HTTPErrorCar"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/maintenance/maintenances": {
            "get": {
                "description": "Retrieve a list of maintenance records for a specific car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Maintenance"
                ],
                "summary": "Retrieve a list of maintenance records",
                "operationId": "get-maintenance-list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default is 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default is 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of maintenance records",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/maintenancedtos.MaintenanceOutputDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/validation_errors.HTTPErrorCar"
                        }
                    }
                }
            }
        },
        "/api/v1/maintenance/scheduled": {
            "get": {
                "description": "Get a list of scheduled maintenances based on the next maintenance due date",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Maintenance"
                ],
                "summary": "Get scheduled maintenances",
                "operationId": "get-scheduled-maintenances",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved scheduled maintenances",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/maintenancedtos.MaintenanceOutputDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/maintenance/{carID}/maintenance/create": {
            "post": {
                "description": "Create a new maintenance with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Maintenance"
                ],
                "summary": "Create a new maintenance",
                "operationId": "post-maintenance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CarID",
                        "name": "carID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Maintenance information to be created",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/maintenancedtos.MaintenanceInputDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created maintenance",
                        "schema": {
                            "$ref": "#/definitions/maintenancedtos.MaintenanceOutputDTO"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/validation_errors.HTTPErrorCar"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/maintenance/{carID}/maintenances": {
            "get": {
                "description": "Get a list of maintenances associated with a specific carID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Maintenance"
                ],
                "summary": "Get maintenances by carID",
                "operationId": "get-maintenances-by-carID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CarID",
                        "name": "carID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved maintenances",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/maintenancedtos.MaintenanceOutputDTO"
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/validation_errors.HTTPError"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/maintenance/{maintenanceID}": {
            "delete": {
                "description": "Delete a maintenance with the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Maintenance"
                ],
                "summary": "Delete a maintenance",
                "operationId": "delete-maintenance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Maintenance ID to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Maintenance deleted successfully"
                    },
                    "400": {
                        "description": "Error details",
                        "schema": {
                            "$ref": "#/definitions/validation_errors.HTTPErrorCar"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing maintenance with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Maintenance"
                ],
                "summary": "Update an existing maintenance",
                "operationId": "patch-maintenance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "maintenanceID",
                        "name": "maintenanceID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Maintenance information to be updated",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/maintenancedtos.MaintenanceInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated maintenance",
                        "schema": {
                            "$ref": "#/definitions/maintenancedtos.MaintenanceOutputDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/review/list": {
            "get": {
                "description": "Get all reviewsn",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Get all reviews",
                "operationId": "get-review",
                "responses": {
                    "201": {
                        "description": "Successfully created review",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reviewdto.ReviewOutputDTO"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/review/{review_id}": {
            "delete": {
                "description": "Delete a review with the provided ID",
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete a review",
                "operationId": "delete-review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review ID to be delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Error details",
                        "schema": {
                            "$ref": "#/definitions/validation_errors.HTTPErrorCar"
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/:id": {
            "put": {
                "description": "Update an existing review with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Update an existing review",
                "operationId": "put-review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review ID to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Review information to be updated",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reviewdto.ReviewInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated review",
                        "schema": {
                            "$ref": "#/definitions/reviewdto.ReviewOutputDTO"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {}
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/validation_errors.HTTPError"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/create": {
            "post": {
                "description": "Create a new review with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a new review",
                "operationId": "post-review",
                "parameters": [
                    {
                        "description": "Review information to be created",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reviewdto.ReviewInputDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created review",
                        "schema": {
                            "$ref": "#/definitions/reviewdto.ReviewOutputDTO"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/validation_errors.HTTPError"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/specification/create": {
            "post": {
                "description": "Create a new specification with the provided information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specification"
                ],
                "summary": "Create a new specification",
                "operationId": "post-specification",
                "parameters": [
                    {
                        "description": "Specification information to be created",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/specificationdtos.SpecificationInputDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created specification",
                        "schema": {
                            "$ref": "#/definitions/specificationdtos.SpecificationOutputDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/validation_errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/cars": {
            "get": {
                "description": "Retrieve a list of cars with pagination support.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "List all cars",
                "operationId": "list-car",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default is 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default is 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of cars",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cardtos.CarOutputDTO"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/validation_errors.HTTPError"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "If the provided e-mail and password are correct an jwt token will be generated with the user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Log in the application",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "user information to login",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authdto.LoginInputDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/orders": {
            "get": {
                "description": "Fetches orders based on query parameters such as options and userID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get orders by query parameters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query parameters for filtering orders",
                        "name": "options",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/orderdto.OrderOutputDTO"
                            }
                        }
                    }
                }
            }
        },
        "/orders/{carID}": {
            "post": {
                "description": "Create a new order with the given parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Car ID",
                        "name": "carID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order input data",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/orderdto.OrderInputPartialDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created order",
                        "schema": {
                            "$ref": "#/definitions/orderdto.OrderOutputDTO"
                        }
                    }
                }
            }
        },
        "/orders/{order_id}": {
            "delete": {
                "description": "Deletes an order by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Delete order by ID",
                "operationId": "delete-order-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "other error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Create a new maintenance with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Create a new user",
                "operationId": "sign-up",
                "parameters": [
                    {
                        "description": "user information to be created",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userdtos.UserInputDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/user/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve user details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userdtos.UserOutPutDTO"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update user details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userdtos.UserUpdateDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userdtos.UserUpdateDTO"
                        }
                    }
                }
            }
        },
        "/user/{id}/change-password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change user password by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Change Password Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authdto.ChangePasswordDTO"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "authdto.ChangePasswordDTO": {
            "type": "object",
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                }
            }
        },
        "authdto.LoginInputDTO": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "cardtos.CarInputDTO": {
            "type": "object",
            "required": [
                "available",
                "brand",
                "category_id",
                "daily_rate",
                "description",
                "fine_amount",
                "license_plate",
                "name"
            ],
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "brand": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "daily_rate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "fine_amount": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "specification": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/specificationdtos.SpecificationInputDto"
                    }
                }
            }
        },
        "cardtos.CarOutputDTO": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "brand": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "daily_rate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "fine_amount": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "license_plate": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "specification": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/specificationdtos.SpecificationOutputDto"
                    }
                }
            }
        },
        "categorydtos.CategoryInputDTO": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "'description is required'"
                },
                "name": {
                    "type": "string",
                    "example": "'name is required'"
                }
            }
        },
        "categorydtos.CategoryOutputDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.Role": {
            "type": "string",
            "enum": [
                "admin",
                "user"
            ],
            "x-enum-varnames": [
                "RoleAdmin",
                "RoleUser"
            ]
        },
        "enums.MaintenanceStatus": {
            "type": "string",
            "enum": [
                "Scheduled",
                "In Progress",
                "Completed",
                "Pending Approval",
                "Canceled",
                "Awaiting Parts",
                "Awaiting Payment",
                "Rescheduled",
                "Maintenance Failed",
                "Awaiting Inspection"
            ],
            "x-enum-varnames": [
                "Scheduled",
                "InProgress",
                "Completed",
                "PendingApproval",
                "Canceled",
                "AwaitingParts",
                "AwaitingPayment",
                "Rescheduled",
                "MaintenanceFailed",
                "AwaitingInspection"
            ]
        },
        "maintenancedtos.MaintenanceInputDTO": {
            "type": "object",
            "required": [
                "last_maintenance_date",
                "maintenance_completion_date",
                "maintenance_status",
                "maintenance_type",
                "next_maintenance_due_date",
                "odometer_reading"
            ],
            "properties": {
                "car_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "labor_cost": {
                    "type": "integer",
                    "minimum": 1
                },
                "last_maintenance_date": {
                    "type": "string"
                },
                "maintenance_completion_date": {
                    "type": "string"
                },
                "maintenance_duration": {
                    "type": "string"
                },
                "maintenance_notes": {
                    "type": "string"
                },
                "maintenance_status": {
                    "$ref": "#/definitions/enums.MaintenanceStatus"
                },
                "maintenance_type": {
                    "type": "string"
                },
                "next_maintenance_due_date": {
                    "type": "string"
                },
                "odometer_reading": {
                    "type": "integer",
                    "minimum": 0
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/maintenancedtos.PartInputDTO"
                    }
                },
                "parts_cost": {
                    "type": "integer",
                    "minimum": 1
                },
                "scheduled_maintenance": {
                    "type": "boolean"
                }
            }
        },
        "maintenancedtos.MaintenanceOutputDTO": {
            "type": "object",
            "required": [
                "last_maintenance_date",
                "maintenance_completion_date",
                "maintenance_status",
                "next_maintenance_due_date"
            ],
            "properties": {
                "car_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labor_cost": {
                    "type": "integer"
                },
                "last_maintenance_date": {
                    "type": "string"
                },
                "maintenance_completion_date": {
                    "type": "string"
                },
                "maintenance_duration": {
                    "type": "string"
                },
                "maintenance_notes": {
                    "type": "string"
                },
                "maintenance_status": {
                    "$ref": "#/definitions/enums.MaintenanceStatus"
                },
                "maintenance_type": {
                    "type": "string"
                },
                "next_maintenance_due_date": {
                    "type": "string"
                },
                "odometer_reading": {
                    "type": "integer"
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/maintenancedtos.PartOutputDTO"
                    }
                },
                "parts_cost": {
                    "type": "integer"
                },
                "scheduled_maintenance": {
                    "type": "boolean"
                }
            }
        },
        "maintenancedtos.PartInputDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "replacement_date": {
                    "type": "string"
                }
            }
        },
        "maintenancedtos.PartOutputDTO": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "maintenance_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "replacement_date": {
                    "type": "string"
                }
            }
        },
        "orderdto.OrderInputPartialDTO": {
            "type": "object",
            "required": [
                "order_status",
                "rental_end_date",
                "rental_start_date",
                "total_cost"
            ],
            "properties": {
                "order_status": {
                    "type": "boolean"
                },
                "rental_end_date": {
                    "type": "string"
                },
                "rental_start_date": {
                    "type": "string"
                },
                "total_cost": {
                    "type": "number"
                }
            }
        },
        "orderdto.OrderOutputDTO": {
            "type": "object",
            "properties": {
                "car_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order_status": {
                    "type": "boolean"
                },
                "rental_end_date": {
                    "type": "string"
                },
                "rental_start_date": {
                    "type": "string"
                },
                "total_cost": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "reviewdto.ReviewInputDTO": {
            "type": "object",
            "required": [
                "car_id",
                "content",
                "rating"
            ],
            "properties": {
                "car_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string",
                    "maxLength": 500
                },
                "rating": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "reviewdto.ReviewOutputDTO": {
            "type": "object",
            "properties": {
                "carId": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "specificationdtos.SpecificationInputDto": {
            "type": "object",
            "required": [
                "car_id",
                "description",
                "name"
            ],
            "properties": {
                "car_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "specificationdtos.SpecificationOutputDto": {
            "type": "object",
            "properties": {
                "car_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "userdtos.UserInputDTO": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "role",
                "status"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "role": {
                    "enum": [
                        "admin",
                        "user",
                        "manager"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.Role"
                        }
                    ]
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "userdtos.UserOutPutDTO": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "userdtos.UserUpdateDTO": {
            "type": "object",
            "required": [
                "avatar",
                "email",
                "name",
                "status"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "validation_errors.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "validation_errors.HTTPErrorCar": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 422
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "['name is required'",
                        " 'description is required'",
                        " 'licenseplate is required'",
                        " 'brand is required'",
                        " 'A car needs a category to be registered']"
                    ]
                },
                "message": {
                    "type": "string",
                    "example": ""
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}